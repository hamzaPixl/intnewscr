{
  "paths": {
    "/auth": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Authenticate the user in the backoffice",
        "description": "Returns token to be able to call other routes",
        "operationId": "auth",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "admin"
        ],
        "summary": "Find profil of the authenticate user",
        "description": "Returns profil",
        "operationId": "getMe",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Add a user",
        "description": "Add a user",
        "operationId": "addUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Find all users",
        "description": "Returns users",
        "operationId": "getAllUsers",
        "parameters": [
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      }
    },
    "/users/{email}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update user",
        "description": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Find user",
        "description": "Returns user",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of the user",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      }
    },
    "/configurations": {
      "get": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Find all configurations",
        "description": "Returns call configurations",
        "operationId": "getConfigurations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "admin"
        ],
        "summary": "Add a configuration for the user",
        "description": "Create a configuration in admin side",
        "operationId": "createConfiguration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Configuration object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          }
        }
      }
    },
    "/configurations/{configurationId}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a configuration",
        "description": "Delete configuration",
        "operationId": "deleteConfiguration",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update configuration",
        "description": "Update configuration",
        "operationId": "updateConfiguration",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Configuration object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Find configuration",
        "description": "Returns configuration",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      }
    },
    "/configurations/{configurationId}/views": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "admin"
        ],
        "summary": "Add a view for a configuration",
        "description": "Create a view in admin side",
        "operationId": "createView",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "View object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "widget": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "queryParams": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          }
        }
      }
    },
    "/configurations/{configurationId}/views/{viewId}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete a view",
        "description": "Delete ciew",
        "operationId": "deleteView",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "path",
            "description": "Id of the view",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "put": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update view",
        "description": "Update view",
        "operationId": "updateView",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "path",
            "description": "Id of the view",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "View object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/View"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Find view",
        "description": "Returns view",
        "operationId": "getView",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "Id of the configuration",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "path",
            "description": "Id of the view",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "AuthenticationError"
          },
          "404": {
            "description": "Not found error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "widget": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "queryParams": {
          "type": "string"
        }
      },
      "xml": {
        "name": "View"
      }
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "admin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/View"
          }
        }
      },
      "xml": {
        "name": "Configuration"
      }
    },
    "Auth": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Auth"
      }
    }
  }
}
